@for !i from 1 to !column-count
{
	.columns-!i 		{ +columns(!i); }
	.push-!i 			{ +push(!i); }
	.pull-!i 			{ +pull(!i); }
	.append-!i 			{ +append(!i); }
	.prepend-!i 		{ +prepend(!i); }
	.group				{ +group; }
	.baseline-up-!i		{ +baseline-up(!i); }
	.baseline-down-!i	{ +baseline-down(!i); }
}

/**
* Container
*
* Makes an element behave as a container. Defaults
* to the total width of the grid.
*
* @type Mixin
* @param !container-width The width of the container
*/
=container(!container-width = !grid-width)
{
	+clearfix;
	
	width:!container-width;
	margin:0 auto;
	position:relative;
}

/**
* Show grid
*
* Shows the grid background image
*
* @type Mixin
* @param !offset The vertical offset of the grid image
*/
=showgrid(!x = 0, !y = 0)
{
	background: url(!grid_image_data) !x !y;
}

/**
 * Span a certain number of columns
 * @param !number The number of columns
 */
=span(!n)
{
	width:[(!n * !column-width) + (!n * (!gutter-width * 2) - (!gutter-width * 2))]px;
}

/**
 * Columns
 *
 * Makes the element behave as a column.
 * @param !number The number of columns
 */
=columns(!n, !side = "both")
{
	+span(!n);
	
	position:relative;
	float:left;
	margin-right:!gutter-width;
	margin-left:!gutter-width;	
}

=first
{
	margin-left:0;
}

=last
{
	margin-right:0;
}

=baseline-up(!n)
{
	top:[-(!baseline * !n)]px;
}

=baseline-down(!n)
{
	top:[!baseline * !n]px;
}

/**
 * Group a bunch of columns, using the padding
 * as the margin. This allows you to create
 * backgrounds and borders
 */
=group
{
	padding:0 !gutter-width;
	margin:[!baseline / 2]px 0;
}

/**
* Layout Utilities
*
* Various layout utilities for manipulating columns
*/

=append(!n)
{
	padding-right:[(!column-width + (!gutter-width * 2)) * !n]px;
}

=prepend(!n)
{
	padding-left:[(!column-width + (!gutter-width * 2)) * !n]px;
}

=baseline(!n)
{
	height:[!baseline * !n]px;
}

=pull(!n)
{
	+float(left);
	margin-right: [!column-width * !n + !gutter-width]px;
	position:relative;
}

=push(!n)
{
	+float(right);
	position:relative;
	margin-left: [ -((!column-width * !n) + !gutter-width)]px;
	margin-right: [!column-width * !n + !gutter-width]px;
}
