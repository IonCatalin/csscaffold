/* --------------------------------------------------------

	This stylesheet shows you how you might 
	structure the layout file of your design.

-------------------------------------------------------- */	
	
	/**
	* +container is a mixin built into Scaffold.
	* It functions the same as the blueprint or 960.gs container
	*/
	.container { +container; }
	.wireframe div { background:rgba(255,0,0,0.4); min-height:[!baseline*3]px; }
	.clear { clear:left; }
	.clearfix { +clearfix; }
	
	/**
	 * This is the content we layout with mixins instead of classes (the second grid)
	 * We use nested selectors to make it neater, and the columns mixin. The number
	 * is the number of columns.
	 */
	#custom-content
	{
		div { margin-bottom:!baseline; }
		#header 		{ +columns(12); }
		#content 		{ +columns(6); }
		#sub-content 	{ +columns(3); }
		#aside 			{ +columns(3); }
		#footer 		{ +columns(12); }
	}
	
	/**
	 * This is the styled content down the bottom.
	 * We want to push everything in on both sides, so we
	 * use the append and prepend mixins.
	 */
	#content-test 
	{
		p,h1,h2,h3,h4,h5,h6,ul,ol
		{
			+prepend(4);
			+append(2);
		}
	}


/**
* Content Layout
*
* Based on Jason Santa Maria's Work on 24Ways. 
* These aren't entirely semantic. But you don't want to 
* fill up your CSS with id's for every figure.
*
* @section Content Layout
* @see http://24ways.org/2008/making-modular-layout-systems
* --------------------------------------------------------
*/

	.figure
	{
		+small-type;

		overflow:hidden;
		line-height:!baseline;
		margin-bottom:!baseline;
		
		img 		{ float:left; margin:0 0 !baseline; width:100%; }
		p  			{ clear:left; padding:0 !important; }
	}
	
	.caption	{ float:left; padding:0 !important; +small-type; line-height:!baseline; }
	.right 		{ float:right; margin-left:!baseline; }
	.left 		{ float:left; margin-right:!baseline; }
	
	.first		{margin-left:0 !important;}
	.last 		{margin-right:0 !important;}
	.solo 		{margin-left:0 !important;margin-right:0 !important;}


